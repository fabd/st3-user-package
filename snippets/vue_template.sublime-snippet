<snippet>
  <content><![CDATA[
<template>
</template>

<script>
import foo from './foo.js'

export default {

  name: '${1:${TM_FILENAME/(.+)\..+|.*/$1/:component_name}}',

  mixins: [ myMixin ],

  data() {
    return {
      ${0}
    }
  },

  props: {
    // basic type check (`null` means accept any type)
    propA: Number,

    // multiple possible types
    propB: [String, Number],
    
    // a required string
    propC: { type: String, required: true },
    
    // a number with default value
    propD: { type: Number, default: 100 },
    
    // object/array defaults should be returned from a
    // factory function
    propE: { type: Object, default: function () {
      return { message: 'hello' } }
    },
    
    // custom validator function
    propF: {
      validator: function (value) {
        return value > 10
      }
    }
  },

  computed: {
    someVar() {
      // this.someVar
    }
  },

  watch: {

  },

  methods: {

  },

  // life cycle events
  beforeMount() { },
  mounted() { },


</script>

<style>
</style>

]]></content>
  <tabTrigger>vue</tabTrigger>
  <scope>text.html.vue</scope>
  <description>Vue template</description>
</snippet>